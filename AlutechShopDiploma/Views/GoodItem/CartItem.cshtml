@model AlutechShopDiploma.Models.Entities.Good
@using AlutechShopDiploma.Services
@using AlutechShopDiploma.SQL


@{  
    int goodID = AlutechShopDiploma.Controllers.GoodItemController.goodID;
    GoodCharacteristicsGetter getter = new GoodCharacteristicsGetter();
    Dictionary<string, string> characteristics = getter.GetGoodCharacteristics(Model.GoodID);

    SqlWorker sqlWorker = new SqlWorker("Data Source=(LocalDb)\\MSSQLLocalDB;Database=aspnet-AlutechShopDiploma-20210330115616;Integrated Security=True");

    string url = sqlWorker.SelectDataFromDB("SELECT Url from ImageContainers WHERE GoodID = " + Model.GoodID);
    string tableNumb = sqlWorker.SelectDataFromDB("SELECT TableID FROM Goods WHERE GoodID = " + Model.GoodID);
    WarehouseWorker warehouseWorker = new WarehouseWorker();
    int goodAmmount = warehouseWorker.GetProductAmmount(Model.GoodID);
    string discountLabel = sqlWorker.SelectDataFromDB("SELECT DiscountAmmount from Discounts WHERE GoodID = " + Model.GoodID);
    double discount = 0;
    double newPrice = 0;
    if (discountLabel != "")
    {
        discount = Convert.ToDouble(discountLabel);
        Model.Price = Math.Round(Model.Price - Model.Price * (discount / 100), 2);
    }

    List<string> goodsList = sqlWorker.SelectDataFromDBMult("SELECT GoodID FROM Goods WHERE TableID = " + tableNumb);
    string isBanned = sqlWorker.SelectDataFromDB("SELECT isBanned from AspNetUsers WHERE UserName = '" + HttpContext.Current.User.Identity.Name + "'");
}
<head>
    <link href="~/Content/css/characteristics_table.css" rel="stylesheet" />
    <link href="~/Content/css/tabstyles.css" rel="stylesheet" />
    <link href="~/Content/css/comparison_table.css" rel="stylesheet" />
</head>

<body>
    @if (TempData["message"] != null)
    {
        <div class="alert alert-success" style="margin-left: 45px;">
            @TempData["message"]
        </div>
    }
    @if (TempData["mistake"] != null)
    {
        <div class="alert alert-danger" style="margin-left: 45px;">
            @TempData["mistake"]
        </div>
    }
    @if (TempData["succsess"] != null)
    {
        <div class="alert alert-success" style="margin-left: 45px;">
            @TempData["succsess"]
        </div>
    }

    <p>

    </p>

    <div class="col-xs-10" style="width:102%">
        <h1 style="display:inline-block">@Model.Name</h1>
        <p>
            <img src="@Url.Content(url)" style="width: 40%" />
        </p>

        <div style="position:absolute;right:0px;left:615px;top:111px;word-break:break-all;overflow:hidden">
            @{
                if (goodAmmount > 0)
                {
                    @Html.Action("Create", "Purchase")
                }
                else
                {
                    <div class="alert alert-warning">К сожалению, данного товара нет на складе.</div>
                }
            }

        </div>
    </div>
    <div class="product-item well" style="width:105%">
        <table class="table1">
            <caption class="caption1">
                Общие характеристики
            </caption>
            <tr class="tr1">
                <th class="th1">Характиеристика</th>
                <th class="th1">Значение</th>
            </tr>
            <tr class="tr1">
                <td class="td1">Цена</td>
                @{
                    if (discountLabel != "")
                    {
                        GoodWorker goodWorker = new GoodWorker(Model.GoodID);
                        newPrice = goodWorker.CalculateGoodPrice();
                        <td class="td1"><s>@Model.Price Руб.</s> @newPrice Руб.</td>
                    }
                    else
                    {
                        <td class="td1">@Model.Price Руб.</td>
                    }
                }

            </tr>
            <tr class="tr1">
                <td class="td1">Наличие скидки</td>
                @{
                    if (discountLabel != "")
                    {
                        <td class="td1">Да</td>
                    }
                    else
                    {
                        <td class="td1">Нет</td>
                    }
                }
            </tr>
            <tr class="tr1">
                <td class="td1">Скидка</td>
                @{
                    if (discountLabel != "")
                    {
                        <td class="td1">@discountLabel %</td>
                    }
                    else
                    {
                        <td class="td1">0 %</td>
                    }
                }
            </tr>
            <tr class="tr1">
                <td class="td1">Рейтинг товара</td>
                <td class="td1">@Model.Rating / 10.0</td>
            </tr>
            <tr class="tr1">
                <td class="td1">Количество просмотров товара</td>
                <td class="td1">@Model.Views</td>
            </tr>
            <tr class="tr1">
                <td class="td1">Количество товара на складе</td>
                <td class="td1">@goodAmmount шт.</td>
            </tr>
        </table>
    </div>

    <div class="tab" style="width:105%">
        <button class="tablinks" onclick="openCity(event, 'London')">Технические характеристики</button>
        <button class="tablinks" onclick="openCity(event, 'Paris')">Описание товара</button>
        <button class="tablinks" onclick="openCity(event, 'Tokyo')">Отзывы</button>
        <button class="tablinks" onclick="openCity(event, 'Moscow')">Оценить товар</button>
        <button class="tablinks" onclick="openCity(event, 'Minsk')">Подобные товары</button>
    </div>

    <!-- Tab content -->
    <div id="London" class="tabcontent" style="width:105%">
        <div class="product-item well">
            <table class="table1">
                <caption class="caption1">
                    Технические характеристики
                </caption>
                <tr class="tr1">
                    <th class="th1">Характиеристика</th>
                    <th class="th1">Значение</th>
                </tr>

                @foreach (var element in characteristics)
                {
                    <tr class="tr1">
                        <td class="td1">@element.Key</td>
                        <td class="td1">@element.Value</td>
                    </tr>
                }
            </table>
        </div>
    </div>

    <div id="Paris" class="tabcontent" style="width:105%">
        @Model.Description
    </div>

    <div id="Tokyo" class="tabcontent" style="width:105%">
        @{
            if (isBanned == "False")
            {
                @Html.Action("Create", "Comment")
            }
            else
            {
        <div class="alert alert-warning" style="margin-left: 45px;">
            Вы заблокированы по причине грубого нарушения правил написания комментариев. Эта функция недоступна заблокированным пользователям. Пожалуйста, обратитсь в службу поддержки для уточнения подробностей.Обратиться в поддержку можно
            <a href="/Home/Index#message">здесь</a>. Также можете подать заявку на разблокировку со своего аккаунта. Для этого щёлкнете <a href="/Manage#statistics">здесь</a>. Затем перейдите в раздел 'Моя статистика'.
        </div>
            }
            <p></p>
            @Html.Action("List", "Comment")
        }
    </div>

    <div id="Minsk" class="tabcontent" style="width:105%">
        @{
            if (goodsList.Count == 1)
            {
                <h3>К сожалению, подобных товаров пока нет.</h3>
            }
            else
            {
                <table class="table_blur">
                    <tr>
                        <th>Товар/Характеристика</th>
                        @{
                            foreach (var element in characteristics)
                            {
                                <th>@element.Key</th>
                            }
                            <th>Цена</th>
                            <th>Рейтинг</th>
                            <th>Просмотры</th>
                        }
                    </tr>
                    @{
                        List<string> goods = sqlWorker.SelectDataFromDBMult("SELECT GoodID from Goods WHERE TableID = " + tableNumb);

                        foreach (var good in goods)
                        {
                            string goodName = sqlWorker.SelectDataFromDB("SELECT Name from Goods WHERE GoodID = " + good);
                            int gID = Convert.ToInt32(good);
                            characteristics = getter.GetGoodCharacteristics(gID);

                            <tr>
                                <td><a href="~/GoodItem/CartItem?goodId=@good">@goodName</a></td>
                                @{
                                    foreach (var characteristic in characteristics)
                                    {
                                        <td>@characteristic.Value</td>
                                    }
                                }
                                <td>@sqlWorker.SelectDataFromDB("SELECT Price FROM Goods Where GoodID=" + good) Руб.</td>
                                <td>@sqlWorker.SelectDataFromDB("SELECT Rating FROM Goods Where GoodID=" + good) / 10.0</td>
                                <td>@sqlWorker.SelectDataFromDB("SELECT Views FROM Goods Where GoodID=" + good)</td>
                            </tr>
                        }
                    }
                </table>
            }
        }
    </div>

    <div id="Moscow" class="tabcontent" style="width:105%">
        @{
            if (isBanned == "False")
            {
                MarksWorker marksWorker = new MarksWorker(Model.GoodID);
                int mrkId = 0;

                if (marksWorker.IsAvailableToPutMark(HttpContext.Current.User.Identity.Name))
                {
                    @Html.Action("Create", "Mark")
                }
                else
                {
                    mrkId = marksWorker.GetMarkId(HttpContext.Current.User.Identity.Name);
                    <div class="alert alert-warning">
                        Спасибо, ваша оценка уже учтена за этот товар. Вы можете её отменить, нажав @Html.ActionLink("сюда", "Delete", "Mark", new { markId = mrkId }, null).
                    </div>
                }
            }
            else
            {
    <div class="alert alert-warning" style="margin-left: 45px;">
        Вы заблокированы по причине грубого нарушения правил написания комментариев. Эта функция недоступна заблокированным пользователям. Пожалуйста, обратитсь в службу поддержки для уточнения подробностей.Обратиться в поддержку можно
        <a href="/Home/Index#message">здесь</a>. Также можете подать заявку на разблокировку со своего аккаунта. Для этого щёлкнете <a href="/Manage#statistics">здесь</a>. Затем перейдите в раздел 'Моя статистика'.
    </div>
            }
        }

    </div>


</body>

<script>
    function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    } 
</script>